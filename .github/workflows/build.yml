name: Build Application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_DIR: ${{github.workspace}}/build
  COVER_DIR: ${{github.workspace}}/build-for-coverage
  VCPKG_DIR: ${{github.workspace}}/deps/vcpkg

jobs:
  pre-requisites:
    runs-on: ubuntu-latest  

    steps:
    - uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: cpp

    - name: Install 3rd Party Dependencies
      run: apt-get install -y --no-install-recommends install curl gcovr libicu66 libssl1.1 libssl-dev unzip

    - name: Install vcpkg
      working-directory: ${{env.VCPKG_DIR}}
      run: |
        export VCPKG_DEFAULT_TRIPLET=x64-linux
        ./bootstrap.sh
        ./vcpkg integrate install

    - name: Install CMake
      uses: lukka/get-cmake@v3.20.1

    - name: Install SonarQube Build Wrapper
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip 
        unzip -o build-wrapper-linux-x86.zip
      
  build:
    needs: pre-requisites
    runs-on: ubuntu-latest  

    steps:
    - name: Configure CMake
      working-directory: ${{github.workspace}}
      run: cmake -B ${{env.BUILD_DIR}} -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_DIR}}/scripts/buildsystems/vcpkg.cmake

    - name: Build Application
      run: cmake --build ${{env.BUILD_DIR}}

  build-with-coverage:
    needs: pre-requisites
    runs-on: ubuntu-latest 

    steps:
    - name: Configure CMake
      working-directory: ${{github.workspace}}
      run: cmake -B ${{env.COVER_DIR}} -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_DIR}}/scripts/buildsystems/vcpkg.cmake -DE2M_OPTION_CODE_COVERAGE=ON -DE2M_OPTION_SUPPORT_SONARQUBE=ON

    - name: Build Application
      run: |
        build-wrapper-linux-x86/build-wrapper-linux-x86-64 --outdir ${{env.COVER_DIR}}/bw-output cmake --build ${{env.COVER_DIR}}    

  test:
    needs: build
    runs-on: ubuntu-latest 

    steps:
    - name: Run Unit and Integration Tests
      working-directory: ${{env.BUILD_DIR}}
      run: ctest
      
  static_analysis:
    needs: [build, build-with-coverage]
    runs-on: ubuntu-latest 
    
    steps:
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
  
    - name: Perform SonarCloud Analysis
      uses: sonarsource/sonarcloud-github-action@master
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: ${{github.workspace}}
        args: >
          -Dsonar.organization=iainchesworth
          -Dsonar.projectKey=iainchesworth_eagle-to-mqtt
          -Dsonar.cfamily.build-wrapper-output=${{env.COVER_DIR}}/bw-output
          -Dsonar.coverageReportPaths=${{env.COVER_DIR}}/coverage.sonarqube.xml
          -Dsonar.sources=src/
          -Dsonar.test.exclusions=tests/**
          -Dsonar.tests=tests/
          -Dsonar.verbose=true
