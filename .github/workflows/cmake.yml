name: eagle-to-mqtt

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [cl, gcc, clang]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx
          - compiler: cl
            cc: cl
            cxx: cl
          - compiler: gcc
            cc: gcc-11
            cxx: g++-11
          - compiler: clang
            cc: clang
            cxx: clang++
        exclude:
          - os: ubuntu-latest
            compiler: cl
          - os: macos-latest
            compiler: cl
          - os: macos-latest
            compiler: gcc
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang

    env:
      BUILD_DIR: '${{ github.workspace }}/build'

    steps:
    - name: Checkout eagle-to-mqtt
      uses: actions/checkout@v2
      with:
        submodules: true
    
    - name: Configure MSVC compiler suite
      uses: ilammy/msvc-dev-cmd@v1
      if: "startsWith(matrix.os, 'windows')"
      with:
          arch: x64

    - name: Configure GCC compiler suite
      uses: egor-tensin/setup-gcc@v1
      if: "startsWith(matrix.os, 'ubuntu')"
      with:
        version: 11
        platform: x64

    - name: Configure compiler settings
      uses: lukka/set-shell-env@v1
      with:
        CXX: ${{ matrix.cxx }}
        CC: ${{ matrix.cc }}
    
    - name: Configure build system
      uses: lukka/get-cmake@v3.20.1
      
    - name: Build dependencies (via vcpkg)
      uses: lukka/run-vcpkg@main
      id: runvcpkg
      with:
        # Just install vcpkg for now, do not install any ports in this step yet.
        setupOnly: true
        # Location of the vcpkg submodule in the Git repository
        vcpkgDirectory: '${{ github.workspace }}/deps/vcpkg'
        # Ensure the cache key changes any time the content of the response file changes.
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json.' ) }}
        vcpkgTriplet: ${{ matrix.triplet }}
        # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed'.
        additionalCachedPaths: ${{ env.BUILD_DIR }}/vcpkg_installed

    - name: Build eagle-to-mqtt
      uses: lukka/run-cmake@main
      id: runcmake
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        buildDirectory: '${{ env.BUILD_DIR }}'
        useVcpkgToolchainFile: true
        cmakeAppendedArgs: '-DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}'
        buildWithCMake: true
        buildWithCMakeArgs: '--config ${{env.BUILD_TYPE}} --parallel'

    - name: Run unit and integration tests
      working-directory: ${{ env.BUILD_DIR }}
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
