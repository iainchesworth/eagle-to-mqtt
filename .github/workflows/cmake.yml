name: eagle-to-mqtt

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    
    - uses: lukka/get-cmake@latest
    
    - name: Set vcpkg's response file path used as part of cache's key.
      uses: lukka/set-shell-env@master
      with:
        VCPKGRESPONSEFILE: ${{ github.workspace }}/vcpkg_${{ matrix.triplet }}.txt
      
    - name: Restore artifacts, or run vcpkg, build and cache artifacts
      uses: lukka/run-vcpkg@main
      id: runvcpkg
      with:
        vcpkgArguments: '@${{ env.VCPKGRESPONSEFILE }}'
        vcpkgDirectory: '${{ github.workspace }}/deps/vcpkg'
        # Ensure the cache key changes any time the content of the response file changes.
        appendedCacheKey: ${{ hashFiles( env.VCPKGRESPONSEFILE ) }}

    - name: Configure CMake
      uses: lukka/run-cmake@main
      id: runcmake
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildWithCMakeArgs: '-B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}'

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
